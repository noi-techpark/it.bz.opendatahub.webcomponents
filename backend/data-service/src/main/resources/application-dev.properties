thumbnail.width = ${THUMBNAIL_WIDTH:600}
thumbnail.height = ${THUMBNAIL_HEIGHT:600}

server.port = ${API_SERVER_PORT:9030}
server.compression.enabled = true
server.compression.mime-types = application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
server.compression.min-response-size = 1024
server.http2.enabled = true

spring.application.name = webcompstore-api

# Database configuration
spring.datasource.url = ${DB_URL:jdbc:postgresql://wcstore_postgres/wcs}
spring.datasource.username = ${DB_USR:wcs}
spring.datasource.password = ${DB_PWD:wcs}
spring.datasource.hikari.minimum-idle=${DB_POOL_SIZE_MIN:1}
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE_MAX:8}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT_MS:120000}
spring.jpa.properties.hibernate.defaultSchema = ${DB_SCHEMA:public}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.hibernate.naming.physical-strategy = it.bz.opendatahub.webcomponents.common.hibernate.CamelSnakeNamingStrategy
spring.flyway.baselineOnMigrate = true
spring.jmx.enabled = false

frontend.url-allowed = *

errorHandling.verboseException = true

logging.level.org.slf4j = ${DEBUG_LEVEL:DEBUG}
logging.level.it.bz.opendatahub.webcomponents = ${DEBUG_LEVEL:DEBUG}
logging.level.liquibase.executor = INFO

application.swaggerBaseUrl = ${API_SWAGGER_BASE_URL:http://localhost:9030}

# URL where the frontend can reach the delivery service to load dist files
# http://localhost:8080/dist
application.deliveryBaseUrl = ${CDN_DIST_URL:http://wcstore_cdn/dist}

# URL where api exposed the preview page
# https://api.webcomponents.opendatahub.com/preview
application.previewBaseUrl = ${API_PREVIEW_URL:http://wcsstore_api/preview}

# Path to the local file system where the crawler or api will store the "dist" files.
application.workspace.path =  ${WORKSPACE_PATH:workspace}

# This API provides the performance statistics shown in the detail view of each web component
# Get it from https://developers.google.com/speed/docs/insights/v5/get-started
# Give it a name. For example: webcomponent-store-test
application.google.lighthouse.api-key = ${LIGHTHOUSE_API_KEY:not-set-123}

# SMTP configuration for the feedback form
application.mailer.to = ${SMTP_TO:help@opendatahub.com}
application.mailer.from = ${SMTP_FROM:no-reply@testingmachine.eu}
application.mailer.subject = ${SMTP_SUBJECT:Web Component Store: Contact form}
application.mailer.smtp-host = ${SMTP_HOST:wcstore_mail}
application.mailer.smtp-port = ${SMTP_PORT:1025}
application.mailer.smtp-user = ${SMTP_USR:test}
application.mailer.smtp-password = ${SMTP_PWD:test}
application.mailer.debug = ${SMTP_DEBUG:true}

# Security
keycloak.auth-server-url=${KEYCLOAK_URL:https://auth.opendatahub.testingmachine.eu/auth/}
keycloak.ssl-required=${KEYCLOAK_SSL_REQUIRED:none}
keycloak.realm=${KEYCLOAK_REALM:noi}
keycloak.resource=${KEYCLOAK_CLIENT_ID:odh-wcs}
keycloak.use-resource-role-mappings=true
keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET:t0p_s3cr37}
keycloak.public-client=false
keycloak.bearer-only=true

# hCapctha server side validation
hCaptcha.secret.key=${HCAPTCHA_SECRET_KEY:t0p_s3cr37}
